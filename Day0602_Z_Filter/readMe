//Singleton : 클래스의 객체를 사용할 때마다 새로운 객체를 만드는 것이 아니라
// 하나의 객체를 공유해서 사용하는 패턴
//웹프로젝트에서 주요자원에 대한 객체를 사용할 때 적용하는 패턴

//사용 클래스에서는 생성자를 호출하지 못하도록 만들고, getInstance() 메서드를
// 이용해서 객체를 생성 또는 인스턴스를 얻을 수 있도록 변경
//Service에서 객체를 사용하고자 할 때, Service가 직접 객체를 만들지 않고
//만들어진 객체를 가져다가 쓴다. 단, 없으면 만들어서 사용
// :>>> getInstance( )메서드를 정의해서 사용

public class MessageDao {
	Connection connection;
	
	private MessageDao() {
		//프라이빗이라 외부에서 접근 불가
	}
	
	public static MessageDao getInstance() {
		//Factory Method: 객체를 반환해주는 메서드
		
		return null;
	}
	
	
페이징 처리
** 페이지 네비게이션을 표시하기 위한 모든 정보를 서블릿에서 만들어서 페이지로 전달
필요한 정보
	현재 페이지 정보
	해당 페이지에 표시될 목록 정보
	네비게이션 시작페이지
	네비게이션 마지막 페이지
	총 페이지수
	한 페이지당 표시될 목록의 개수
미리 rownum을 